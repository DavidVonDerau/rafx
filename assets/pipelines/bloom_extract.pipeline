(
    renderpass: (
        attachments: [
            // Write out SDR to the swapchain
            (
                flags: None,
                format: MatchSurface,
                samples: SampleCount1,
                load_op: Clear,
                store_op: Store,
                stencil_load_op: DontCare,
                stencil_store_op: DontCare,
                initial_layout: Undefined,
                final_layout: ColorAttachmentOptimal,
            ),
            // Write out the HDR brightness image for bloom
            (
                flags: None,
                format: MatchColorAttachment,
                samples: SampleCount1,
                load_op: Clear,
                store_op: Store,
                stencil_load_op: DontCare,
                stencil_store_op: DontCare,
                initial_layout: Undefined,
                // Outputs to bloom
                final_layout: ShaderReadOnlyOptimal,
            ),
        ],
        subpasses: [
            (
                pipeline_bind_point: Graphics,
                input_attachments: [],
                color_attachments: [
                    (
                        attachment: Index(0),
                        layout: ColorAttachmentOptimal,
                    ),
                    (
                        attachment: Index(1),
                        layout: ColorAttachmentOptimal,
                    ),
                ],
                resolve_attachments: [],
                depth_stencil_attachment: None,
            )
        ],
        dependencies: [
            (
                src_subpass: External,
                dst_subpass: Index(0),
                src_stage_mask: ColorAttachmentOutput,
                dst_stage_mask: ColorAttachmentOutput,
                src_access_mask: [],
                dst_access_mask: [
                    ColorAttachmentRead,
                    ColorAttachmentWrite,
                ],
                dependency_flags: Empty,
            ),
        ],
    ),
    input_assembly_state: (
        primitive_topology: TriangleList,
        primitive_restart_enable: false,
    ),
    viewport_state: (
        viewports: [
            (
                dimensions: MatchSwapchain,
                min_depth: 0,
                max_depth: 1,
            ),
        ],
        scissors: [
            (
                dimensions: MatchSwapchain,
            ),
        ],
    ),
    rasterization_state: (
        depth_clamp_enable: false,
        rasterizer_discard_enable: false,
        polygon_mode: Fill,
        cull_mode: None,
        front_face: CounterClockwise,
        depth_bias_enable: false,
        depth_bias_constant_factor: 0,
        depth_bias_clamp: 0,
        depth_bias_slope_factor: 0,
        line_width: 1,
    ),
    multisample_state: (
        rasterization_samples: SampleCount1,
        sample_shading_enable: false,
        min_sample_shading: 0,
        sample_mask: None,
        alpha_to_coverage_enable: false,
        alpha_to_one_enable: false,
    ),
    color_blend_state: (
        logic_op_enable: false,
        logic_op: Clear,
        attachments: [
            (
                blend_enable: false,
                src_color_blend_factor: SrcAlpha,
                dst_color_blend_factor: OneMinusSrcAlpha,
                color_blend_op: Add,
                src_alpha_blend_factor: One,
                dst_alpha_blend_factor: Zero,
                alpha_blend_op: Add,
                color_write_mask: (
                    red: true,
                    green: true,
                    blue: true,
                    alpha: true,
                ),
            ),
            (
                blend_enable: false,
                src_color_blend_factor: SrcAlpha,
                dst_color_blend_factor: OneMinusSrcAlpha,
                color_blend_op: Add,
                src_alpha_blend_factor: One,
                dst_alpha_blend_factor: Zero,
                alpha_blend_op: Add,
                color_write_mask: (
                    red: true,
                    green: true,
                    blue: true,
                    alpha: true,
                ),
            ),
        ],
        blend_constants: (0, 0, 0, 0),
    ),
    depth_stencil_state: (
        depth_test_enable: false,
        depth_write_enable: false,
        depth_compare_op: Never,
        depth_bounds_test_enable: false,
        min_depth_bounds: 0.0,
        max_depth_bounds: 1.0,
        stencil_test_enable: false,
        front: (
            fail_op: Keep,
            pass_op: Keep,
            depth_fail_op: Keep,
            compare_op: Never,
            compare_mask: 0,
            write_mask: 0,
            reference: 0
        ),
        back: (
            fail_op: Keep,
            pass_op: Keep,
            depth_fail_op: Keep,
            compare_op: Never,
            compare_mask: 0,
            write_mask: 0,
            reference: 0
        )
    ),
    dynamic_state: (
        dynamic_states: [],
    ),
)